scalar DateTime
scalar Date

type Movie {
    id: ID!
    plot: String
    genres: [String]
    runtime: Int
    cast: [String]
    numMflixComments: Int
    title: String!
    fullPlot: String
    languages: [String]
    poster: String
    released: Date
    directors: [String]
    rated: String
    awards: Awards
    lastUpdated: String
    year: Int
    imdb: String
    countries: [String]
    type: String
    tomatoes: Tomatoes
}

type Tomatoes {
    viewer: Viewer
    fresh: Int
    critic: Critic
    rotten: Int
    lastUpdated: Date
}

type Viewer {
    rating: Float
    numReviews: Int
    meter: Int
}

type Critic {
    rating: Float
    numReviews: Int
    meter: Int
}

type Awards {
    wins: Int
    nominations: Int
    text: String
}

type User {
  id: ID!
  name: String
  # ...
}

type Theater {
    id: ID!
    theaterId: Int
    location: Location
}

type Location {
    address: Address
    geo: Geo
}

type Address {
    street1: String
    city: String
    state: String
    zipcode: String
}

type Geo {
    type: String
    coordinates: [String]
}

type Comment {
    id: ID
    name: String
    email: String
    movieId: ID
    text: String
    date: Date
}

type Session {
  id: ID
  userId: String
  jwt: String
}

type Query {
    movies(title: String, year: Int): [Movie!]!
    theaters(limit: Int = 100, offset: Int = 0): [Theater!]!
    users(limit: Int = 100, offset: Int = 0): [User!]!
    comments(limit: Int = 100, offset: Int = 0, name: String): [Comment!]!
    sessions(limit: Int = 100, offset: Int = 0, userId: String): [Session!]!
}
